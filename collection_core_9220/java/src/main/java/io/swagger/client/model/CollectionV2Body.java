/*
 * Example for response examples value
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
/**
 * CollectionV2Body
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-06-30T01:30:35.375Z[Etc/UTC]")
public class CollectionV2Body {
  @SerializedName("RequestId")
  private String requestId = null;

  @SerializedName("RequestTime")
  private String requestTime = null;

  @SerializedName("PartnerCode")
  private String partnerCode = null;

  @SerializedName("Operation")
  private BigDecimal operation = null;

  @SerializedName("CreateType")
  private String createType = null;

  @SerializedName("AccName")
  private String accName = null;

  @SerializedName("CollectAmountMin")
  private BigDecimal collectAmountMin = null;

  @SerializedName("CollectAmountMax")
  private BigDecimal collectAmountMax = null;

  @SerializedName("AccNo")
  private String accNo = null;

  @SerializedName("OrderId")
  private String orderId = null;

  @SerializedName("ExpireDate")
  private String expireDate = null;

  public CollectionV2Body requestId(String requestId) {
    this.requestId = requestId;
    return this;
  }

   /**
   * Unique code 
   * @return requestId
  **/
  @Schema(example = "BK16321291688141", description = "Unique code ")
  public String getRequestId() {
    return requestId;
  }

  public void setRequestId(String requestId) {
    this.requestId = requestId;
  }

  public CollectionV2Body requestTime(String requestTime) {
    this.requestTime = requestTime;
    return this;
  }

   /**
   * Time send the request from PARTNER , format: YYYY-MM-DD HH:MM:SS.
   * @return requestTime
  **/
  @Schema(example = "2022-01-24 10:59:46", description = "Time send the request from PARTNER , format: YYYY-MM-DD HH:MM:SS.")
  public String getRequestTime() {
    return requestTime;
  }

  public void setRequestTime(String requestTime) {
    this.requestTime = requestTime;
  }

  public CollectionV2Body partnerCode(String partnerCode) {
    this.partnerCode = partnerCode;
    return this;
  }

   /**
   * Unique code BAOKIM provide
   * @return partnerCode
  **/
  @Schema(example = "CHIHOBAOKIM", description = "Unique code BAOKIM provide")
  public String getPartnerCode() {
    return partnerCode;
  }

  public void setPartnerCode(String partnerCode) {
    this.partnerCode = partnerCode;
  }

  public CollectionV2Body operation(BigDecimal operation) {
    this.operation = operation;
    return this;
  }

   /**
   * 9001: create va - 9002: update va
   * @return operation
  **/
  @Schema(example = "9001", description = "9001: create va - 9002: update va")
  public BigDecimal getOperation() {
    return operation;
  }

  public void setOperation(BigDecimal operation) {
    this.operation = operation;
  }

  public CollectionV2Body createType(String createType) {
    this.createType = createType;
    return this;
  }

   /**
   * Fix &#x3D; 2
   * @return createType
  **/
  @Schema(example = "2", description = "Fix = 2")
  public String getCreateType() {
    return createType;
  }

  public void setCreateType(String createType) {
    this.createType = createType;
  }

  public CollectionV2Body accName(String accName) {
    this.accName = accName;
    return this;
  }

   /**
   * The name of Account holder (name of USER)
   * @return accName
  **/
  @Schema(example = "NHU ANH", description = "The name of Account holder (name of USER)")
  public String getAccName() {
    return accName;
  }

  public void setAccName(String accName) {
    this.accName = accName;
  }

  public CollectionV2Body collectAmountMin(BigDecimal collectAmountMin) {
    this.collectAmountMin = collectAmountMin;
    return this;
  }

   /**
   * collect amount min (50.000)
   * @return collectAmountMin
  **/
  @Schema(example = "50000", description = "collect amount min (50.000)")
  public BigDecimal getCollectAmountMin() {
    return collectAmountMin;
  }

  public void setCollectAmountMin(BigDecimal collectAmountMin) {
    this.collectAmountMin = collectAmountMin;
  }

  public CollectionV2Body collectAmountMax(BigDecimal collectAmountMax) {
    this.collectAmountMax = collectAmountMax;
    return this;
  }

   /**
   * collect amount min (50.000.000)
   * @return collectAmountMax
  **/
  @Schema(example = "50000000", description = "collect amount min (50.000.000)")
  public BigDecimal getCollectAmountMax() {
    return collectAmountMax;
  }

  public void setCollectAmountMax(BigDecimal collectAmountMax) {
    this.collectAmountMax = collectAmountMax;
  }

  public CollectionV2Body accNo(String accNo) {
    this.accNo = accNo;
    return this;
  }

   /**
   * Required when update:VA number need to update information. If create VA, send NULL
   * @return accNo
  **/
  @Schema(example = "903002414742", description = "Required when update:VA number need to update information. If create VA, send NULL")
  public String getAccNo() {
    return accNo;
  }

  public void setAccNo(String accNo) {
    this.accNo = accNo;
  }

  public CollectionV2Body orderId(String orderId) {
    this.orderId = orderId;
    return this;
  }

   /**
   * Unique id for each VA
   * @return orderId
  **/
  @Schema(example = "BK1632129167822619", description = "Unique id for each VA")
  public String getOrderId() {
    return orderId;
  }

  public void setOrderId(String orderId) {
    this.orderId = orderId;
  }

  public CollectionV2Body expireDate(String expireDate) {
    this.expireDate = expireDate;
    return this;
  }

   /**
   * Expire date. Format: YYYYMM-DD HH:II:SS
   * @return expireDate
  **/
  @Schema(example = "2023-09-20 16:12:46", description = "Expire date. Format: YYYYMM-DD HH:II:SS")
  public String getExpireDate() {
    return expireDate;
  }

  public void setExpireDate(String expireDate) {
    this.expireDate = expireDate;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CollectionV2Body collectionV2Body = (CollectionV2Body) o;
    return Objects.equals(this.requestId, collectionV2Body.requestId) &&
        Objects.equals(this.requestTime, collectionV2Body.requestTime) &&
        Objects.equals(this.partnerCode, collectionV2Body.partnerCode) &&
        Objects.equals(this.operation, collectionV2Body.operation) &&
        Objects.equals(this.createType, collectionV2Body.createType) &&
        Objects.equals(this.accName, collectionV2Body.accName) &&
        Objects.equals(this.collectAmountMin, collectionV2Body.collectAmountMin) &&
        Objects.equals(this.collectAmountMax, collectionV2Body.collectAmountMax) &&
        Objects.equals(this.accNo, collectionV2Body.accNo) &&
        Objects.equals(this.orderId, collectionV2Body.orderId) &&
        Objects.equals(this.expireDate, collectionV2Body.expireDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(requestId, requestTime, partnerCode, operation, createType, accName, collectAmountMin, collectAmountMax, accNo, orderId, expireDate);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CollectionV2Body {\n");
    
    sb.append("    requestId: ").append(toIndentedString(requestId)).append("\n");
    sb.append("    requestTime: ").append(toIndentedString(requestTime)).append("\n");
    sb.append("    partnerCode: ").append(toIndentedString(partnerCode)).append("\n");
    sb.append("    operation: ").append(toIndentedString(operation)).append("\n");
    sb.append("    createType: ").append(toIndentedString(createType)).append("\n");
    sb.append("    accName: ").append(toIndentedString(accName)).append("\n");
    sb.append("    collectAmountMin: ").append(toIndentedString(collectAmountMin)).append("\n");
    sb.append("    collectAmountMax: ").append(toIndentedString(collectAmountMax)).append("\n");
    sb.append("    accNo: ").append(toIndentedString(accNo)).append("\n");
    sb.append("    orderId: ").append(toIndentedString(orderId)).append("\n");
    sb.append("    expireDate: ").append(toIndentedString(expireDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
