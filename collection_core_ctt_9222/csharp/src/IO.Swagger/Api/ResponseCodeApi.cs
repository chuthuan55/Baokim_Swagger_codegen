/* 
 * Collection payments
 *
 * <img src=\"https://devtest.baokim.vn/collection/core_ctt/image/Picture1.png\" class=\"image-collection-payment\" /> <p><strong>Note:</strong></p> <p>+ In case PARTNER want to use collect via Virtual Account, PARTNER will need to buid:</p> <p style=\"padding-left: 50px;\">     - <a href=\"#operations-Virtual_Account_4\\.0-8442c69ffbaf4b3677a52fa3ebcef6d4\">Register virtual account</a> <br>     - <a href=\"#operations-Virtual_Account_4\\.0-1796c61005edee3976097a607fe9dbaa\">Update virtual account informations</a> <br>     - <a href=\"#operations-tag-Notice_of_collection_transaction\">Notice of collection transaction</a> <br> </p>
 *
 * OpenAPI spec version: 2.3 and 4.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using RestSharp;
using IO.Swagger.Client;

namespace IO.Swagger.Api
{
    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
        public interface IResponseCodeApi : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// Collection response code
        /// </summary>
        /// <remarks>
        /// &lt;table&gt;         &lt;thead&gt;         &lt;tr&gt;             &lt;th&gt;ResponseCode&lt;/th&gt;             &lt;th&gt;ResponseMessage&lt;/th&gt;         &lt;/tr&gt;         &lt;/thead&gt;         &lt;tbody&gt;         &lt;tr&gt;             &lt;td&gt;200&lt;/td&gt;             &lt;td&gt;Successful&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;99&lt;/td&gt;             &lt;td&gt;Transaction timeout &lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;11&lt;/td&gt;             &lt;td&gt;Failed&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;101&lt;/td&gt;             &lt;td&gt;Error processing from Baokim&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;102&lt;/td&gt;             &lt;td&gt;Error from Bank &lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;103&lt;/td&gt;             &lt;td&gt;Operation is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;104&lt;/td&gt;             &lt;td&gt;RequestId or request  is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;105&lt;/td&gt;             &lt;td&gt;PartnerCode is incorrect  &lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;106&lt;/td&gt;             &lt;td&gt;AccName is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;107&lt;/td&gt;             &lt;td&gt;ClientIdNo is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;108&lt;/td&gt;             &lt;td&gt;IssuedDate hoặc IssuedPlace is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;109&lt;/td&gt;             &lt;td&gt;CollectAmount is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;110&lt;/td&gt;             &lt;td&gt;ExpireDate is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;111&lt;/td&gt;             &lt;td&gt;AccNo is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;112&lt;/td&gt;             &lt;td&gt;AccNo is not exist&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;113&lt;/td&gt;             &lt;td&gt;RefferenceId is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;114&lt;/td&gt;             &lt;td&gt;RefferenceId isn’t exists&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;115&lt;/td&gt;             &lt;td class&#x3D;\&quot;bg-color-red\&quot;&gt;TransAmount  is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;116&lt;/td&gt;             &lt;td class&#x3D;\&quot;bg-color-red\&quot;&gt;TransTime  is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;117&lt;/td&gt;             &lt;td class&#x3D;\&quot;bg-color-red\&quot;&gt;BefTransDebt  is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;118&lt;/td&gt;             &lt;td class&#x3D;\&quot;bg-color-red\&quot;&gt;TransId is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;119&lt;/td&gt;             &lt;td class&#x3D;\&quot;bg-color-red\&quot;&gt;AffTransDebt is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;120&lt;/td&gt;             &lt;td class&#x3D;\&quot;bg-color-red\&quot;&gt;Signature is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;121&lt;/td&gt;             &lt;td&gt;AccountType is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;122&lt;/td&gt;             &lt;td&gt;OrderId is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;127&lt;/td&gt;             &lt;td&gt;Bank is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;128&lt;/td&gt;             &lt;td&gt;CollectionType is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;129&lt;/td&gt;             &lt;td&gt;Bank not used this CollectionType&lt;/td&gt;         &lt;/tr&gt;         &lt;/tbody&gt;     &lt;/table&gt;     &lt;p&gt;* &lt;strong class&#x3D;\&quot;bg-color-red\&quot;&gt;Red codes&lt;/strong&gt; represent errors that will arpear when developing the function: &lt;a href&#x3D;\&quot;#notice-of-collection-transaction\&quot;&gt;\&quot;Notice of collection transaction\&quot;&lt;/a&gt;&lt;/p&gt;    
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns></returns>
        void CollectionResponseCodeGet ();

        /// <summary>
        /// Collection response code
        /// </summary>
        /// <remarks>
        /// &lt;table&gt;         &lt;thead&gt;         &lt;tr&gt;             &lt;th&gt;ResponseCode&lt;/th&gt;             &lt;th&gt;ResponseMessage&lt;/th&gt;         &lt;/tr&gt;         &lt;/thead&gt;         &lt;tbody&gt;         &lt;tr&gt;             &lt;td&gt;200&lt;/td&gt;             &lt;td&gt;Successful&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;99&lt;/td&gt;             &lt;td&gt;Transaction timeout &lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;11&lt;/td&gt;             &lt;td&gt;Failed&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;101&lt;/td&gt;             &lt;td&gt;Error processing from Baokim&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;102&lt;/td&gt;             &lt;td&gt;Error from Bank &lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;103&lt;/td&gt;             &lt;td&gt;Operation is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;104&lt;/td&gt;             &lt;td&gt;RequestId or request  is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;105&lt;/td&gt;             &lt;td&gt;PartnerCode is incorrect  &lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;106&lt;/td&gt;             &lt;td&gt;AccName is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;107&lt;/td&gt;             &lt;td&gt;ClientIdNo is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;108&lt;/td&gt;             &lt;td&gt;IssuedDate hoặc IssuedPlace is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;109&lt;/td&gt;             &lt;td&gt;CollectAmount is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;110&lt;/td&gt;             &lt;td&gt;ExpireDate is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;111&lt;/td&gt;             &lt;td&gt;AccNo is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;112&lt;/td&gt;             &lt;td&gt;AccNo is not exist&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;113&lt;/td&gt;             &lt;td&gt;RefferenceId is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;114&lt;/td&gt;             &lt;td&gt;RefferenceId isn’t exists&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;115&lt;/td&gt;             &lt;td class&#x3D;\&quot;bg-color-red\&quot;&gt;TransAmount  is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;116&lt;/td&gt;             &lt;td class&#x3D;\&quot;bg-color-red\&quot;&gt;TransTime  is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;117&lt;/td&gt;             &lt;td class&#x3D;\&quot;bg-color-red\&quot;&gt;BefTransDebt  is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;118&lt;/td&gt;             &lt;td class&#x3D;\&quot;bg-color-red\&quot;&gt;TransId is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;119&lt;/td&gt;             &lt;td class&#x3D;\&quot;bg-color-red\&quot;&gt;AffTransDebt is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;120&lt;/td&gt;             &lt;td class&#x3D;\&quot;bg-color-red\&quot;&gt;Signature is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;121&lt;/td&gt;             &lt;td&gt;AccountType is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;122&lt;/td&gt;             &lt;td&gt;OrderId is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;127&lt;/td&gt;             &lt;td&gt;Bank is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;128&lt;/td&gt;             &lt;td&gt;CollectionType is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;129&lt;/td&gt;             &lt;td&gt;Bank not used this CollectionType&lt;/td&gt;         &lt;/tr&gt;         &lt;/tbody&gt;     &lt;/table&gt;     &lt;p&gt;* &lt;strong class&#x3D;\&quot;bg-color-red\&quot;&gt;Red codes&lt;/strong&gt; represent errors that will arpear when developing the function: &lt;a href&#x3D;\&quot;#notice-of-collection-transaction\&quot;&gt;\&quot;Notice of collection transaction\&quot;&lt;/a&gt;&lt;/p&gt;    
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>ApiResponse of Object(void)</returns>
        ApiResponse<Object> CollectionResponseCodeGetWithHttpInfo ();
        #endregion Synchronous Operations
        #region Asynchronous Operations
        /// <summary>
        /// Collection response code
        /// </summary>
        /// <remarks>
        /// &lt;table&gt;         &lt;thead&gt;         &lt;tr&gt;             &lt;th&gt;ResponseCode&lt;/th&gt;             &lt;th&gt;ResponseMessage&lt;/th&gt;         &lt;/tr&gt;         &lt;/thead&gt;         &lt;tbody&gt;         &lt;tr&gt;             &lt;td&gt;200&lt;/td&gt;             &lt;td&gt;Successful&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;99&lt;/td&gt;             &lt;td&gt;Transaction timeout &lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;11&lt;/td&gt;             &lt;td&gt;Failed&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;101&lt;/td&gt;             &lt;td&gt;Error processing from Baokim&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;102&lt;/td&gt;             &lt;td&gt;Error from Bank &lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;103&lt;/td&gt;             &lt;td&gt;Operation is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;104&lt;/td&gt;             &lt;td&gt;RequestId or request  is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;105&lt;/td&gt;             &lt;td&gt;PartnerCode is incorrect  &lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;106&lt;/td&gt;             &lt;td&gt;AccName is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;107&lt;/td&gt;             &lt;td&gt;ClientIdNo is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;108&lt;/td&gt;             &lt;td&gt;IssuedDate hoặc IssuedPlace is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;109&lt;/td&gt;             &lt;td&gt;CollectAmount is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;110&lt;/td&gt;             &lt;td&gt;ExpireDate is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;111&lt;/td&gt;             &lt;td&gt;AccNo is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;112&lt;/td&gt;             &lt;td&gt;AccNo is not exist&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;113&lt;/td&gt;             &lt;td&gt;RefferenceId is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;114&lt;/td&gt;             &lt;td&gt;RefferenceId isn’t exists&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;115&lt;/td&gt;             &lt;td class&#x3D;\&quot;bg-color-red\&quot;&gt;TransAmount  is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;116&lt;/td&gt;             &lt;td class&#x3D;\&quot;bg-color-red\&quot;&gt;TransTime  is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;117&lt;/td&gt;             &lt;td class&#x3D;\&quot;bg-color-red\&quot;&gt;BefTransDebt  is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;118&lt;/td&gt;             &lt;td class&#x3D;\&quot;bg-color-red\&quot;&gt;TransId is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;119&lt;/td&gt;             &lt;td class&#x3D;\&quot;bg-color-red\&quot;&gt;AffTransDebt is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;120&lt;/td&gt;             &lt;td class&#x3D;\&quot;bg-color-red\&quot;&gt;Signature is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;121&lt;/td&gt;             &lt;td&gt;AccountType is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;122&lt;/td&gt;             &lt;td&gt;OrderId is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;127&lt;/td&gt;             &lt;td&gt;Bank is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;128&lt;/td&gt;             &lt;td&gt;CollectionType is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;129&lt;/td&gt;             &lt;td&gt;Bank not used this CollectionType&lt;/td&gt;         &lt;/tr&gt;         &lt;/tbody&gt;     &lt;/table&gt;     &lt;p&gt;* &lt;strong class&#x3D;\&quot;bg-color-red\&quot;&gt;Red codes&lt;/strong&gt; represent errors that will arpear when developing the function: &lt;a href&#x3D;\&quot;#notice-of-collection-transaction\&quot;&gt;\&quot;Notice of collection transaction\&quot;&lt;/a&gt;&lt;/p&gt;    
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of void</returns>
        System.Threading.Tasks.Task CollectionResponseCodeGetAsync ();

        /// <summary>
        /// Collection response code
        /// </summary>
        /// <remarks>
        /// &lt;table&gt;         &lt;thead&gt;         &lt;tr&gt;             &lt;th&gt;ResponseCode&lt;/th&gt;             &lt;th&gt;ResponseMessage&lt;/th&gt;         &lt;/tr&gt;         &lt;/thead&gt;         &lt;tbody&gt;         &lt;tr&gt;             &lt;td&gt;200&lt;/td&gt;             &lt;td&gt;Successful&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;99&lt;/td&gt;             &lt;td&gt;Transaction timeout &lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;11&lt;/td&gt;             &lt;td&gt;Failed&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;101&lt;/td&gt;             &lt;td&gt;Error processing from Baokim&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;102&lt;/td&gt;             &lt;td&gt;Error from Bank &lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;103&lt;/td&gt;             &lt;td&gt;Operation is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;104&lt;/td&gt;             &lt;td&gt;RequestId or request  is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;105&lt;/td&gt;             &lt;td&gt;PartnerCode is incorrect  &lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;106&lt;/td&gt;             &lt;td&gt;AccName is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;107&lt;/td&gt;             &lt;td&gt;ClientIdNo is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;108&lt;/td&gt;             &lt;td&gt;IssuedDate hoặc IssuedPlace is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;109&lt;/td&gt;             &lt;td&gt;CollectAmount is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;110&lt;/td&gt;             &lt;td&gt;ExpireDate is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;111&lt;/td&gt;             &lt;td&gt;AccNo is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;112&lt;/td&gt;             &lt;td&gt;AccNo is not exist&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;113&lt;/td&gt;             &lt;td&gt;RefferenceId is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;114&lt;/td&gt;             &lt;td&gt;RefferenceId isn’t exists&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;115&lt;/td&gt;             &lt;td class&#x3D;\&quot;bg-color-red\&quot;&gt;TransAmount  is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;116&lt;/td&gt;             &lt;td class&#x3D;\&quot;bg-color-red\&quot;&gt;TransTime  is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;117&lt;/td&gt;             &lt;td class&#x3D;\&quot;bg-color-red\&quot;&gt;BefTransDebt  is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;118&lt;/td&gt;             &lt;td class&#x3D;\&quot;bg-color-red\&quot;&gt;TransId is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;119&lt;/td&gt;             &lt;td class&#x3D;\&quot;bg-color-red\&quot;&gt;AffTransDebt is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;120&lt;/td&gt;             &lt;td class&#x3D;\&quot;bg-color-red\&quot;&gt;Signature is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;121&lt;/td&gt;             &lt;td&gt;AccountType is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;122&lt;/td&gt;             &lt;td&gt;OrderId is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;127&lt;/td&gt;             &lt;td&gt;Bank is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;128&lt;/td&gt;             &lt;td&gt;CollectionType is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;129&lt;/td&gt;             &lt;td&gt;Bank not used this CollectionType&lt;/td&gt;         &lt;/tr&gt;         &lt;/tbody&gt;     &lt;/table&gt;     &lt;p&gt;* &lt;strong class&#x3D;\&quot;bg-color-red\&quot;&gt;Red codes&lt;/strong&gt; represent errors that will arpear when developing the function: &lt;a href&#x3D;\&quot;#notice-of-collection-transaction\&quot;&gt;\&quot;Notice of collection transaction\&quot;&lt;/a&gt;&lt;/p&gt;    
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of ApiResponse</returns>
        System.Threading.Tasks.Task<ApiResponse<Object>> CollectionResponseCodeGetAsyncWithHttpInfo ();
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
        public partial class ResponseCodeApi : IResponseCodeApi
    {
        private IO.Swagger.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="ResponseCodeApi"/> class.
        /// </summary>
        /// <returns></returns>
        public ResponseCodeApi(String basePath)
        {
            this.Configuration = new IO.Swagger.Client.Configuration { BasePath = basePath };

            ExceptionFactory = IO.Swagger.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="ResponseCodeApi"/> class
        /// </summary>
        /// <returns></returns>
        public ResponseCodeApi()
        {
            this.Configuration = IO.Swagger.Client.Configuration.Default;

            ExceptionFactory = IO.Swagger.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="ResponseCodeApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public ResponseCodeApi(IO.Swagger.Client.Configuration configuration = null)
        {
            if (configuration == null) // use the default one in Configuration
                this.Configuration = IO.Swagger.Client.Configuration.Default;
            else
                this.Configuration = configuration;

            ExceptionFactory = IO.Swagger.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public String GetBasePath()
        {
            return this.Configuration.ApiClient.RestClient.BaseUrl.ToString();
        }

        /// <summary>
        /// Sets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        [Obsolete("SetBasePath is deprecated, please do 'Configuration.ApiClient = new ApiClient(\"http://new-path\")' instead.")]
        public void SetBasePath(String basePath)
        {
            // do nothing
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public IO.Swagger.Client.Configuration Configuration {get; set;}

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public IO.Swagger.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        /// Gets the default header.
        /// </summary>
        /// <returns>Dictionary of HTTP header</returns>
        [Obsolete("DefaultHeader is deprecated, please use Configuration.DefaultHeader instead.")]
        public IDictionary<String, String> DefaultHeader()
        {
            return new ReadOnlyDictionary<string, string>(this.Configuration.DefaultHeader);
        }

        /// <summary>
        /// Add default header.
        /// </summary>
        /// <param name="key">Header field name.</param>
        /// <param name="value">Header field value.</param>
        /// <returns></returns>
        [Obsolete("AddDefaultHeader is deprecated, please use Configuration.AddDefaultHeader instead.")]
        public void AddDefaultHeader(string key, string value)
        {
            this.Configuration.AddDefaultHeader(key, value);
        }

        /// <summary>
        /// Collection response code &lt;table&gt;         &lt;thead&gt;         &lt;tr&gt;             &lt;th&gt;ResponseCode&lt;/th&gt;             &lt;th&gt;ResponseMessage&lt;/th&gt;         &lt;/tr&gt;         &lt;/thead&gt;         &lt;tbody&gt;         &lt;tr&gt;             &lt;td&gt;200&lt;/td&gt;             &lt;td&gt;Successful&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;99&lt;/td&gt;             &lt;td&gt;Transaction timeout &lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;11&lt;/td&gt;             &lt;td&gt;Failed&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;101&lt;/td&gt;             &lt;td&gt;Error processing from Baokim&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;102&lt;/td&gt;             &lt;td&gt;Error from Bank &lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;103&lt;/td&gt;             &lt;td&gt;Operation is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;104&lt;/td&gt;             &lt;td&gt;RequestId or request  is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;105&lt;/td&gt;             &lt;td&gt;PartnerCode is incorrect  &lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;106&lt;/td&gt;             &lt;td&gt;AccName is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;107&lt;/td&gt;             &lt;td&gt;ClientIdNo is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;108&lt;/td&gt;             &lt;td&gt;IssuedDate hoặc IssuedPlace is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;109&lt;/td&gt;             &lt;td&gt;CollectAmount is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;110&lt;/td&gt;             &lt;td&gt;ExpireDate is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;111&lt;/td&gt;             &lt;td&gt;AccNo is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;112&lt;/td&gt;             &lt;td&gt;AccNo is not exist&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;113&lt;/td&gt;             &lt;td&gt;RefferenceId is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;114&lt;/td&gt;             &lt;td&gt;RefferenceId isn’t exists&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;115&lt;/td&gt;             &lt;td class&#x3D;\&quot;bg-color-red\&quot;&gt;TransAmount  is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;116&lt;/td&gt;             &lt;td class&#x3D;\&quot;bg-color-red\&quot;&gt;TransTime  is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;117&lt;/td&gt;             &lt;td class&#x3D;\&quot;bg-color-red\&quot;&gt;BefTransDebt  is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;118&lt;/td&gt;             &lt;td class&#x3D;\&quot;bg-color-red\&quot;&gt;TransId is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;119&lt;/td&gt;             &lt;td class&#x3D;\&quot;bg-color-red\&quot;&gt;AffTransDebt is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;120&lt;/td&gt;             &lt;td class&#x3D;\&quot;bg-color-red\&quot;&gt;Signature is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;121&lt;/td&gt;             &lt;td&gt;AccountType is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;122&lt;/td&gt;             &lt;td&gt;OrderId is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;127&lt;/td&gt;             &lt;td&gt;Bank is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;128&lt;/td&gt;             &lt;td&gt;CollectionType is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;129&lt;/td&gt;             &lt;td&gt;Bank not used this CollectionType&lt;/td&gt;         &lt;/tr&gt;         &lt;/tbody&gt;     &lt;/table&gt;     &lt;p&gt;* &lt;strong class&#x3D;\&quot;bg-color-red\&quot;&gt;Red codes&lt;/strong&gt; represent errors that will arpear when developing the function: &lt;a href&#x3D;\&quot;#notice-of-collection-transaction\&quot;&gt;\&quot;Notice of collection transaction\&quot;&lt;/a&gt;&lt;/p&gt;    
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns></returns>
        public void CollectionResponseCodeGet ()
        {
             CollectionResponseCodeGetWithHttpInfo();
        }

        /// <summary>
        /// Collection response code &lt;table&gt;         &lt;thead&gt;         &lt;tr&gt;             &lt;th&gt;ResponseCode&lt;/th&gt;             &lt;th&gt;ResponseMessage&lt;/th&gt;         &lt;/tr&gt;         &lt;/thead&gt;         &lt;tbody&gt;         &lt;tr&gt;             &lt;td&gt;200&lt;/td&gt;             &lt;td&gt;Successful&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;99&lt;/td&gt;             &lt;td&gt;Transaction timeout &lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;11&lt;/td&gt;             &lt;td&gt;Failed&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;101&lt;/td&gt;             &lt;td&gt;Error processing from Baokim&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;102&lt;/td&gt;             &lt;td&gt;Error from Bank &lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;103&lt;/td&gt;             &lt;td&gt;Operation is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;104&lt;/td&gt;             &lt;td&gt;RequestId or request  is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;105&lt;/td&gt;             &lt;td&gt;PartnerCode is incorrect  &lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;106&lt;/td&gt;             &lt;td&gt;AccName is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;107&lt;/td&gt;             &lt;td&gt;ClientIdNo is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;108&lt;/td&gt;             &lt;td&gt;IssuedDate hoặc IssuedPlace is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;109&lt;/td&gt;             &lt;td&gt;CollectAmount is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;110&lt;/td&gt;             &lt;td&gt;ExpireDate is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;111&lt;/td&gt;             &lt;td&gt;AccNo is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;112&lt;/td&gt;             &lt;td&gt;AccNo is not exist&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;113&lt;/td&gt;             &lt;td&gt;RefferenceId is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;114&lt;/td&gt;             &lt;td&gt;RefferenceId isn’t exists&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;115&lt;/td&gt;             &lt;td class&#x3D;\&quot;bg-color-red\&quot;&gt;TransAmount  is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;116&lt;/td&gt;             &lt;td class&#x3D;\&quot;bg-color-red\&quot;&gt;TransTime  is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;117&lt;/td&gt;             &lt;td class&#x3D;\&quot;bg-color-red\&quot;&gt;BefTransDebt  is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;118&lt;/td&gt;             &lt;td class&#x3D;\&quot;bg-color-red\&quot;&gt;TransId is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;119&lt;/td&gt;             &lt;td class&#x3D;\&quot;bg-color-red\&quot;&gt;AffTransDebt is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;120&lt;/td&gt;             &lt;td class&#x3D;\&quot;bg-color-red\&quot;&gt;Signature is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;121&lt;/td&gt;             &lt;td&gt;AccountType is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;122&lt;/td&gt;             &lt;td&gt;OrderId is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;127&lt;/td&gt;             &lt;td&gt;Bank is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;128&lt;/td&gt;             &lt;td&gt;CollectionType is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;129&lt;/td&gt;             &lt;td&gt;Bank not used this CollectionType&lt;/td&gt;         &lt;/tr&gt;         &lt;/tbody&gt;     &lt;/table&gt;     &lt;p&gt;* &lt;strong class&#x3D;\&quot;bg-color-red\&quot;&gt;Red codes&lt;/strong&gt; represent errors that will arpear when developing the function: &lt;a href&#x3D;\&quot;#notice-of-collection-transaction\&quot;&gt;\&quot;Notice of collection transaction\&quot;&lt;/a&gt;&lt;/p&gt;    
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>ApiResponse of Object(void)</returns>
        public ApiResponse<Object> CollectionResponseCodeGetWithHttpInfo ()
        {

            var localVarPath = "Collection response code";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);


            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("CollectionResponseCodeGet", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                null);
        }

        /// <summary>
        /// Collection response code &lt;table&gt;         &lt;thead&gt;         &lt;tr&gt;             &lt;th&gt;ResponseCode&lt;/th&gt;             &lt;th&gt;ResponseMessage&lt;/th&gt;         &lt;/tr&gt;         &lt;/thead&gt;         &lt;tbody&gt;         &lt;tr&gt;             &lt;td&gt;200&lt;/td&gt;             &lt;td&gt;Successful&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;99&lt;/td&gt;             &lt;td&gt;Transaction timeout &lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;11&lt;/td&gt;             &lt;td&gt;Failed&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;101&lt;/td&gt;             &lt;td&gt;Error processing from Baokim&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;102&lt;/td&gt;             &lt;td&gt;Error from Bank &lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;103&lt;/td&gt;             &lt;td&gt;Operation is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;104&lt;/td&gt;             &lt;td&gt;RequestId or request  is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;105&lt;/td&gt;             &lt;td&gt;PartnerCode is incorrect  &lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;106&lt;/td&gt;             &lt;td&gt;AccName is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;107&lt;/td&gt;             &lt;td&gt;ClientIdNo is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;108&lt;/td&gt;             &lt;td&gt;IssuedDate hoặc IssuedPlace is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;109&lt;/td&gt;             &lt;td&gt;CollectAmount is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;110&lt;/td&gt;             &lt;td&gt;ExpireDate is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;111&lt;/td&gt;             &lt;td&gt;AccNo is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;112&lt;/td&gt;             &lt;td&gt;AccNo is not exist&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;113&lt;/td&gt;             &lt;td&gt;RefferenceId is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;114&lt;/td&gt;             &lt;td&gt;RefferenceId isn’t exists&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;115&lt;/td&gt;             &lt;td class&#x3D;\&quot;bg-color-red\&quot;&gt;TransAmount  is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;116&lt;/td&gt;             &lt;td class&#x3D;\&quot;bg-color-red\&quot;&gt;TransTime  is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;117&lt;/td&gt;             &lt;td class&#x3D;\&quot;bg-color-red\&quot;&gt;BefTransDebt  is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;118&lt;/td&gt;             &lt;td class&#x3D;\&quot;bg-color-red\&quot;&gt;TransId is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;119&lt;/td&gt;             &lt;td class&#x3D;\&quot;bg-color-red\&quot;&gt;AffTransDebt is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;120&lt;/td&gt;             &lt;td class&#x3D;\&quot;bg-color-red\&quot;&gt;Signature is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;121&lt;/td&gt;             &lt;td&gt;AccountType is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;122&lt;/td&gt;             &lt;td&gt;OrderId is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;127&lt;/td&gt;             &lt;td&gt;Bank is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;128&lt;/td&gt;             &lt;td&gt;CollectionType is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;129&lt;/td&gt;             &lt;td&gt;Bank not used this CollectionType&lt;/td&gt;         &lt;/tr&gt;         &lt;/tbody&gt;     &lt;/table&gt;     &lt;p&gt;* &lt;strong class&#x3D;\&quot;bg-color-red\&quot;&gt;Red codes&lt;/strong&gt; represent errors that will arpear when developing the function: &lt;a href&#x3D;\&quot;#notice-of-collection-transaction\&quot;&gt;\&quot;Notice of collection transaction\&quot;&lt;/a&gt;&lt;/p&gt;    
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of void</returns>
        public async System.Threading.Tasks.Task CollectionResponseCodeGetAsync ()
        {
             await CollectionResponseCodeGetAsyncWithHttpInfo();

        }

        /// <summary>
        /// Collection response code &lt;table&gt;         &lt;thead&gt;         &lt;tr&gt;             &lt;th&gt;ResponseCode&lt;/th&gt;             &lt;th&gt;ResponseMessage&lt;/th&gt;         &lt;/tr&gt;         &lt;/thead&gt;         &lt;tbody&gt;         &lt;tr&gt;             &lt;td&gt;200&lt;/td&gt;             &lt;td&gt;Successful&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;99&lt;/td&gt;             &lt;td&gt;Transaction timeout &lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;11&lt;/td&gt;             &lt;td&gt;Failed&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;101&lt;/td&gt;             &lt;td&gt;Error processing from Baokim&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;102&lt;/td&gt;             &lt;td&gt;Error from Bank &lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;103&lt;/td&gt;             &lt;td&gt;Operation is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;104&lt;/td&gt;             &lt;td&gt;RequestId or request  is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;105&lt;/td&gt;             &lt;td&gt;PartnerCode is incorrect  &lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;106&lt;/td&gt;             &lt;td&gt;AccName is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;107&lt;/td&gt;             &lt;td&gt;ClientIdNo is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;108&lt;/td&gt;             &lt;td&gt;IssuedDate hoặc IssuedPlace is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;109&lt;/td&gt;             &lt;td&gt;CollectAmount is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;110&lt;/td&gt;             &lt;td&gt;ExpireDate is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;111&lt;/td&gt;             &lt;td&gt;AccNo is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;112&lt;/td&gt;             &lt;td&gt;AccNo is not exist&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;113&lt;/td&gt;             &lt;td&gt;RefferenceId is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;114&lt;/td&gt;             &lt;td&gt;RefferenceId isn’t exists&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;115&lt;/td&gt;             &lt;td class&#x3D;\&quot;bg-color-red\&quot;&gt;TransAmount  is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;116&lt;/td&gt;             &lt;td class&#x3D;\&quot;bg-color-red\&quot;&gt;TransTime  is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;117&lt;/td&gt;             &lt;td class&#x3D;\&quot;bg-color-red\&quot;&gt;BefTransDebt  is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;118&lt;/td&gt;             &lt;td class&#x3D;\&quot;bg-color-red\&quot;&gt;TransId is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;119&lt;/td&gt;             &lt;td class&#x3D;\&quot;bg-color-red\&quot;&gt;AffTransDebt is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;120&lt;/td&gt;             &lt;td class&#x3D;\&quot;bg-color-red\&quot;&gt;Signature is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;121&lt;/td&gt;             &lt;td&gt;AccountType is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;122&lt;/td&gt;             &lt;td&gt;OrderId is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;127&lt;/td&gt;             &lt;td&gt;Bank is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;128&lt;/td&gt;             &lt;td&gt;CollectionType is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;129&lt;/td&gt;             &lt;td&gt;Bank not used this CollectionType&lt;/td&gt;         &lt;/tr&gt;         &lt;/tbody&gt;     &lt;/table&gt;     &lt;p&gt;* &lt;strong class&#x3D;\&quot;bg-color-red\&quot;&gt;Red codes&lt;/strong&gt; represent errors that will arpear when developing the function: &lt;a href&#x3D;\&quot;#notice-of-collection-transaction\&quot;&gt;\&quot;Notice of collection transaction\&quot;&lt;/a&gt;&lt;/p&gt;    
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of ApiResponse</returns>
        public async System.Threading.Tasks.Task<ApiResponse<Object>> CollectionResponseCodeGetAsyncWithHttpInfo ()
        {

            var localVarPath = "Collection response code";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);


            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await this.Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("CollectionResponseCodeGet", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                null);
        }

    }
}
