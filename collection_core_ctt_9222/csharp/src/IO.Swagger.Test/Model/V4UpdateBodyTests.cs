/* 
 * Collection payments
 *
 * <img src=\"https://devtest.baokim.vn/collection/core_ctt/image/Picture1.png\" class=\"image-collection-payment\" /> <p><strong>Note:</strong></p> <p>+ In case PARTNER want to use collect via Virtual Account, PARTNER will need to buid:</p> <p style=\"padding-left: 50px;\">     - <a href=\"#operations-Virtual_Account_4\\.0-8442c69ffbaf4b3677a52fa3ebcef6d4\">Register virtual account</a> <br>     - <a href=\"#operations-Virtual_Account_4\\.0-1796c61005edee3976097a607fe9dbaa\">Update virtual account informations</a> <br>     - <a href=\"#operations-tag-Notice_of_collection_transaction\">Notice of collection transaction</a> <br> </p>
 *
 * OpenAPI spec version: 2.3 and 4.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using IO.Swagger.Api;
using IO.Swagger.Model;
using IO.Swagger.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing V4UpdateBody
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class V4UpdateBodyTests
    {
        // TODO uncomment below to declare an instance variable for V4UpdateBody
        //private V4UpdateBody instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of V4UpdateBody
            //instance = new V4UpdateBody();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of V4UpdateBody
        /// </summary>
        [Test]
        public void V4UpdateBodyInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" V4UpdateBody
            //Assert.IsInstanceOfType<V4UpdateBody> (instance, "variable 'instance' is a V4UpdateBody");
        }


        /// <summary>
        /// Test the property 'RequestId'
        /// </summary>
        [Test]
        public void RequestIdTest()
        {
            // TODO unit test for the property 'RequestId'
        }
        /// <summary>
        /// Test the property 'RequestTime'
        /// </summary>
        [Test]
        public void RequestTimeTest()
        {
            // TODO unit test for the property 'RequestTime'
        }
        /// <summary>
        /// Test the property 'PartnerCode'
        /// </summary>
        [Test]
        public void PartnerCodeTest()
        {
            // TODO unit test for the property 'PartnerCode'
        }
        /// <summary>
        /// Test the property 'AccNo'
        /// </summary>
        [Test]
        public void AccNoTest()
        {
            // TODO unit test for the property 'AccNo'
        }
        /// <summary>
        /// Test the property 'AccName'
        /// </summary>
        [Test]
        public void AccNameTest()
        {
            // TODO unit test for the property 'AccName'
        }
        /// <summary>
        /// Test the property 'CollectAmount'
        /// </summary>
        [Test]
        public void CollectAmountTest()
        {
            // TODO unit test for the property 'CollectAmount'
        }
        /// <summary>
        /// Test the property 'OrderId'
        /// </summary>
        [Test]
        public void OrderIdTest()
        {
            // TODO unit test for the property 'OrderId'
        }
        /// <summary>
        /// Test the property 'ExpireDate'
        /// </summary>
        [Test]
        public void ExpireDateTest()
        {
            // TODO unit test for the property 'ExpireDate'
        }
        /// <summary>
        /// Test the property 'Bank'
        /// </summary>
        [Test]
        public void BankTest()
        {
            // TODO unit test for the property 'Bank'
        }

    }

}
