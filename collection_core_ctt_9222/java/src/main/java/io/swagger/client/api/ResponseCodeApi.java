/*
 * Collection payments
 * <img src=\"https://devtest.baokim.vn/collection/core_ctt/image/Picture1.png\" class=\"image-collection-payment\" /> <p><strong>Note:</strong></p> <p>+ In case PARTNER want to use collect via Virtual Account, PARTNER will need to buid:</p> <p style=\"padding-left: 50px;\">     - <a href=\"#operations-Virtual_Account_4\\.0-8442c69ffbaf4b3677a52fa3ebcef6d4\">Register virtual account</a> <br>     - <a href=\"#operations-Virtual_Account_4\\.0-1796c61005edee3976097a607fe9dbaa\">Update virtual account informations</a> <br>     - <a href=\"#operations-tag-Notice_of_collection_transaction\">Notice of collection transaction</a> <br> </p>
 *
 * OpenAPI spec version: 2.3 and 4.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.ApiCallback;
import io.swagger.client.ApiClient;
import io.swagger.client.ApiException;
import io.swagger.client.ApiResponse;
import io.swagger.client.Configuration;
import io.swagger.client.Pair;
import io.swagger.client.ProgressRequestBody;
import io.swagger.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;



import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ResponseCodeApi {
    private ApiClient apiClient;

    public ResponseCodeApi() {
        this(Configuration.getDefaultApiClient());
    }

    public ResponseCodeApi(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return apiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    /**
     * Build call for collectionResponseCodeGet
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call collectionResponseCodeGetCall(final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "Collection response code";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call collectionResponseCodeGetValidateBeforeCall(final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        com.squareup.okhttp.Call call = collectionResponseCodeGetCall(progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Collection response code
     * &lt;table&gt;         &lt;thead&gt;         &lt;tr&gt;             &lt;th&gt;ResponseCode&lt;/th&gt;             &lt;th&gt;ResponseMessage&lt;/th&gt;         &lt;/tr&gt;         &lt;/thead&gt;         &lt;tbody&gt;         &lt;tr&gt;             &lt;td&gt;200&lt;/td&gt;             &lt;td&gt;Successful&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;99&lt;/td&gt;             &lt;td&gt;Transaction timeout &lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;11&lt;/td&gt;             &lt;td&gt;Failed&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;101&lt;/td&gt;             &lt;td&gt;Error processing from Baokim&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;102&lt;/td&gt;             &lt;td&gt;Error from Bank &lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;103&lt;/td&gt;             &lt;td&gt;Operation is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;104&lt;/td&gt;             &lt;td&gt;RequestId or request  is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;105&lt;/td&gt;             &lt;td&gt;PartnerCode is incorrect  &lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;106&lt;/td&gt;             &lt;td&gt;AccName is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;107&lt;/td&gt;             &lt;td&gt;ClientIdNo is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;108&lt;/td&gt;             &lt;td&gt;IssuedDate hoặc IssuedPlace is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;109&lt;/td&gt;             &lt;td&gt;CollectAmount is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;110&lt;/td&gt;             &lt;td&gt;ExpireDate is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;111&lt;/td&gt;             &lt;td&gt;AccNo is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;112&lt;/td&gt;             &lt;td&gt;AccNo is not exist&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;113&lt;/td&gt;             &lt;td&gt;RefferenceId is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;114&lt;/td&gt;             &lt;td&gt;RefferenceId isn’t exists&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;115&lt;/td&gt;             &lt;td class&#x3D;\&quot;bg-color-red\&quot;&gt;TransAmount  is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;116&lt;/td&gt;             &lt;td class&#x3D;\&quot;bg-color-red\&quot;&gt;TransTime  is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;117&lt;/td&gt;             &lt;td class&#x3D;\&quot;bg-color-red\&quot;&gt;BefTransDebt  is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;118&lt;/td&gt;             &lt;td class&#x3D;\&quot;bg-color-red\&quot;&gt;TransId is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;119&lt;/td&gt;             &lt;td class&#x3D;\&quot;bg-color-red\&quot;&gt;AffTransDebt is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;120&lt;/td&gt;             &lt;td class&#x3D;\&quot;bg-color-red\&quot;&gt;Signature is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;121&lt;/td&gt;             &lt;td&gt;AccountType is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;122&lt;/td&gt;             &lt;td&gt;OrderId is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;127&lt;/td&gt;             &lt;td&gt;Bank is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;128&lt;/td&gt;             &lt;td&gt;CollectionType is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;129&lt;/td&gt;             &lt;td&gt;Bank not used this CollectionType&lt;/td&gt;         &lt;/tr&gt;         &lt;/tbody&gt;     &lt;/table&gt;     &lt;p&gt;* &lt;strong class&#x3D;\&quot;bg-color-red\&quot;&gt;Red codes&lt;/strong&gt; represent errors that will arpear when developing the function: &lt;a href&#x3D;\&quot;#notice-of-collection-transaction\&quot;&gt;\&quot;Notice of collection transaction\&quot;&lt;/a&gt;&lt;/p&gt;    
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public void collectionResponseCodeGet() throws ApiException {
        collectionResponseCodeGetWithHttpInfo();
    }

    /**
     * Collection response code
     * &lt;table&gt;         &lt;thead&gt;         &lt;tr&gt;             &lt;th&gt;ResponseCode&lt;/th&gt;             &lt;th&gt;ResponseMessage&lt;/th&gt;         &lt;/tr&gt;         &lt;/thead&gt;         &lt;tbody&gt;         &lt;tr&gt;             &lt;td&gt;200&lt;/td&gt;             &lt;td&gt;Successful&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;99&lt;/td&gt;             &lt;td&gt;Transaction timeout &lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;11&lt;/td&gt;             &lt;td&gt;Failed&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;101&lt;/td&gt;             &lt;td&gt;Error processing from Baokim&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;102&lt;/td&gt;             &lt;td&gt;Error from Bank &lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;103&lt;/td&gt;             &lt;td&gt;Operation is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;104&lt;/td&gt;             &lt;td&gt;RequestId or request  is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;105&lt;/td&gt;             &lt;td&gt;PartnerCode is incorrect  &lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;106&lt;/td&gt;             &lt;td&gt;AccName is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;107&lt;/td&gt;             &lt;td&gt;ClientIdNo is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;108&lt;/td&gt;             &lt;td&gt;IssuedDate hoặc IssuedPlace is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;109&lt;/td&gt;             &lt;td&gt;CollectAmount is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;110&lt;/td&gt;             &lt;td&gt;ExpireDate is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;111&lt;/td&gt;             &lt;td&gt;AccNo is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;112&lt;/td&gt;             &lt;td&gt;AccNo is not exist&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;113&lt;/td&gt;             &lt;td&gt;RefferenceId is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;114&lt;/td&gt;             &lt;td&gt;RefferenceId isn’t exists&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;115&lt;/td&gt;             &lt;td class&#x3D;\&quot;bg-color-red\&quot;&gt;TransAmount  is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;116&lt;/td&gt;             &lt;td class&#x3D;\&quot;bg-color-red\&quot;&gt;TransTime  is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;117&lt;/td&gt;             &lt;td class&#x3D;\&quot;bg-color-red\&quot;&gt;BefTransDebt  is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;118&lt;/td&gt;             &lt;td class&#x3D;\&quot;bg-color-red\&quot;&gt;TransId is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;119&lt;/td&gt;             &lt;td class&#x3D;\&quot;bg-color-red\&quot;&gt;AffTransDebt is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;120&lt;/td&gt;             &lt;td class&#x3D;\&quot;bg-color-red\&quot;&gt;Signature is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;121&lt;/td&gt;             &lt;td&gt;AccountType is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;122&lt;/td&gt;             &lt;td&gt;OrderId is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;127&lt;/td&gt;             &lt;td&gt;Bank is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;128&lt;/td&gt;             &lt;td&gt;CollectionType is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;129&lt;/td&gt;             &lt;td&gt;Bank not used this CollectionType&lt;/td&gt;         &lt;/tr&gt;         &lt;/tbody&gt;     &lt;/table&gt;     &lt;p&gt;* &lt;strong class&#x3D;\&quot;bg-color-red\&quot;&gt;Red codes&lt;/strong&gt; represent errors that will arpear when developing the function: &lt;a href&#x3D;\&quot;#notice-of-collection-transaction\&quot;&gt;\&quot;Notice of collection transaction\&quot;&lt;/a&gt;&lt;/p&gt;    
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Void> collectionResponseCodeGetWithHttpInfo() throws ApiException {
        com.squareup.okhttp.Call call = collectionResponseCodeGetValidateBeforeCall(null, null);
        return apiClient.execute(call);
    }

    /**
     * Collection response code (asynchronously)
     * &lt;table&gt;         &lt;thead&gt;         &lt;tr&gt;             &lt;th&gt;ResponseCode&lt;/th&gt;             &lt;th&gt;ResponseMessage&lt;/th&gt;         &lt;/tr&gt;         &lt;/thead&gt;         &lt;tbody&gt;         &lt;tr&gt;             &lt;td&gt;200&lt;/td&gt;             &lt;td&gt;Successful&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;99&lt;/td&gt;             &lt;td&gt;Transaction timeout &lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;11&lt;/td&gt;             &lt;td&gt;Failed&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;101&lt;/td&gt;             &lt;td&gt;Error processing from Baokim&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;102&lt;/td&gt;             &lt;td&gt;Error from Bank &lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;103&lt;/td&gt;             &lt;td&gt;Operation is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;104&lt;/td&gt;             &lt;td&gt;RequestId or request  is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;105&lt;/td&gt;             &lt;td&gt;PartnerCode is incorrect  &lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;106&lt;/td&gt;             &lt;td&gt;AccName is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;107&lt;/td&gt;             &lt;td&gt;ClientIdNo is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;108&lt;/td&gt;             &lt;td&gt;IssuedDate hoặc IssuedPlace is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;109&lt;/td&gt;             &lt;td&gt;CollectAmount is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;110&lt;/td&gt;             &lt;td&gt;ExpireDate is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;111&lt;/td&gt;             &lt;td&gt;AccNo is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;112&lt;/td&gt;             &lt;td&gt;AccNo is not exist&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;113&lt;/td&gt;             &lt;td&gt;RefferenceId is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;114&lt;/td&gt;             &lt;td&gt;RefferenceId isn’t exists&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;115&lt;/td&gt;             &lt;td class&#x3D;\&quot;bg-color-red\&quot;&gt;TransAmount  is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;116&lt;/td&gt;             &lt;td class&#x3D;\&quot;bg-color-red\&quot;&gt;TransTime  is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;117&lt;/td&gt;             &lt;td class&#x3D;\&quot;bg-color-red\&quot;&gt;BefTransDebt  is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;118&lt;/td&gt;             &lt;td class&#x3D;\&quot;bg-color-red\&quot;&gt;TransId is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;119&lt;/td&gt;             &lt;td class&#x3D;\&quot;bg-color-red\&quot;&gt;AffTransDebt is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;120&lt;/td&gt;             &lt;td class&#x3D;\&quot;bg-color-red\&quot;&gt;Signature is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;121&lt;/td&gt;             &lt;td&gt;AccountType is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;122&lt;/td&gt;             &lt;td&gt;OrderId is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;127&lt;/td&gt;             &lt;td&gt;Bank is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;128&lt;/td&gt;             &lt;td&gt;CollectionType is incorrect&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;129&lt;/td&gt;             &lt;td&gt;Bank not used this CollectionType&lt;/td&gt;         &lt;/tr&gt;         &lt;/tbody&gt;     &lt;/table&gt;     &lt;p&gt;* &lt;strong class&#x3D;\&quot;bg-color-red\&quot;&gt;Red codes&lt;/strong&gt; represent errors that will arpear when developing the function: &lt;a href&#x3D;\&quot;#notice-of-collection-transaction\&quot;&gt;\&quot;Notice of collection transaction\&quot;&lt;/a&gt;&lt;/p&gt;    
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call collectionResponseCodeGetAsync(final ApiCallback<Void> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = collectionResponseCodeGetValidateBeforeCall(progressListener, progressRequestListener);
        apiClient.executeAsync(call, callback);
        return call;
    }
}
