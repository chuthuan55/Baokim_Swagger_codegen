/*
 * Collection payments
 * <img src=\"https://devtest.baokim.vn/collection/core_ctt/image/Picture1.png\" class=\"image-collection-payment\" /> <p><strong>Note:</strong></p> <p>+ In case PARTNER want to use collect via Virtual Account, PARTNER will need to buid:</p> <p style=\"padding-left: 50px;\">     - <a href=\"#operations-Virtual_Account_4\\.0-8442c69ffbaf4b3677a52fa3ebcef6d4\">Register virtual account</a> <br>     - <a href=\"#operations-Virtual_Account_4\\.0-1796c61005edee3976097a607fe9dbaa\">Update virtual account informations</a> <br>     - <a href=\"#operations-tag-Notice_of_collection_transaction\">Notice of collection transaction</a> <br> </p>
 *
 * OpenAPI spec version: 2.3 and 4.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
/**
 * Body
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-06-30T01:31:18.186Z[Etc/UTC]")
public class Body {
  @SerializedName("RequestId")
  private String requestId = null;

  @SerializedName("RequestTime")
  private String requestTime = null;

  @SerializedName("PartnerCode")
  private String partnerCode = null;

  @SerializedName("AccNo")
  private String accNo = null;

  @SerializedName("ClientIdNo")
  private String clientIdNo = null;

  @SerializedName("TransId")
  private String transId = null;

  @SerializedName("TransAmount")
  private BigDecimal transAmount = null;

  @SerializedName("TransTime")
  private String transTime = null;

  @SerializedName("BefTransDebt")
  private BigDecimal befTransDebt = null;

  @SerializedName("AffTransDebt")
  private BigDecimal affTransDebt = null;

  @SerializedName("AccountType")
  private BigDecimal accountType = null;

  @SerializedName("OrderId")
  private BigDecimal orderId = null;

  @SerializedName("Signature")
  private String signature = null;

  public Body requestId(String requestId) {
    this.requestId = requestId;
    return this;
  }

   /**
   * Unique code 
   * @return requestId
  **/
  @Schema(example = "BK16321291688141", description = "Unique code ")
  public String getRequestId() {
    return requestId;
  }

  public void setRequestId(String requestId) {
    this.requestId = requestId;
  }

  public Body requestTime(String requestTime) {
    this.requestTime = requestTime;
    return this;
  }

   /**
   * Time send the request from PARTNER , format: YYYY-MM-DD HH:MM:SS.
   * @return requestTime
  **/
  @Schema(example = "2022-01-24 10:59:46", description = "Time send the request from PARTNER , format: YYYY-MM-DD HH:MM:SS.")
  public String getRequestTime() {
    return requestTime;
  }

  public void setRequestTime(String requestTime) {
    this.requestTime = requestTime;
  }

  public Body partnerCode(String partnerCode) {
    this.partnerCode = partnerCode;
    return this;
  }

   /**
   * Fix: BAOKIM
   * @return partnerCode
  **/
  @Schema(example = "BAOKIM", description = "Fix: BAOKIM")
  public String getPartnerCode() {
    return partnerCode;
  }

  public void setPartnerCode(String partnerCode) {
    this.partnerCode = partnerCode;
  }

  public Body accNo(String accNo) {
    this.accNo = accNo;
    return this;
  }

   /**
   * VA number
   * @return accNo
  **/
  @Schema(example = "900300001223", description = "VA number")
  public String getAccNo() {
    return accNo;
  }

  public void setAccNo(String accNo) {
    this.accNo = accNo;
  }

  public Body clientIdNo(String clientIdNo) {
    this.clientIdNo = clientIdNo;
    return this;
  }

   /**
   * Client id no
   * @return clientIdNo
  **/
  @Schema(example = "909140379139", description = "Client id no")
  public String getClientIdNo() {
    return clientIdNo;
  }

  public void setClientIdNo(String clientIdNo) {
    this.clientIdNo = clientIdNo;
  }

  public Body transId(String transId) {
    this.transId = transId;
    return this;
  }

   /**
   * Unique transaction id in BAOKIM system
   * @return transId
  **/
  @Schema(example = "BKS3KS423KJH24J2", description = "Unique transaction id in BAOKIM system")
  public String getTransId() {
    return transId;
  }

  public void setTransId(String transId) {
    this.transId = transId;
  }

  public Body transAmount(BigDecimal transAmount) {
    this.transAmount = transAmount;
    return this;
  }

   /**
   * collect amount 
   * @return transAmount
  **/
  @Schema(example = "500000", description = "collect amount ")
  public BigDecimal getTransAmount() {
    return transAmount;
  }

  public void setTransAmount(BigDecimal transAmount) {
    this.transAmount = transAmount;
  }

  public Body transTime(String transTime) {
    this.transTime = transTime;
    return this;
  }

   /**
   * Transaction time at BAOKIM system 
   * @return transTime
  **/
  @Schema(example = "2019-07-26 16:33:02", description = "Transaction time at BAOKIM system ")
  public String getTransTime() {
    return transTime;
  }

  public void setTransTime(String transTime) {
    this.transTime = transTime;
  }

  public Body befTransDebt(BigDecimal befTransDebt) {
    this.befTransDebt = befTransDebt;
    return this;
  }

   /**
   * Amount before transaction
   * @return befTransDebt
  **/
  @Schema(example = "9500000", description = "Amount before transaction")
  public BigDecimal getBefTransDebt() {
    return befTransDebt;
  }

  public void setBefTransDebt(BigDecimal befTransDebt) {
    this.befTransDebt = befTransDebt;
  }

  public Body affTransDebt(BigDecimal affTransDebt) {
    this.affTransDebt = affTransDebt;
    return this;
  }

   /**
   * Amount after transaction
   * @return affTransDebt
  **/
  @Schema(example = "10000000", description = "Amount after transaction")
  public BigDecimal getAffTransDebt() {
    return affTransDebt;
  }

  public void setAffTransDebt(BigDecimal affTransDebt) {
    this.affTransDebt = affTransDebt;
  }

  public Body accountType(BigDecimal accountType) {
    this.accountType = accountType;
    return this;
  }

   /**
   * Account with indentifier or without indentifier. 1: Account with identifier. 2: Account without identifier.
   * @return accountType
  **/
  @Schema(example = "2", description = "Account with indentifier or without indentifier. 1: Account with identifier. 2: Account without identifier.")
  public BigDecimal getAccountType() {
    return accountType;
  }

  public void setAccountType(BigDecimal accountType) {
    this.accountType = accountType;
  }

  public Body orderId(BigDecimal orderId) {
    this.orderId = orderId;
    return this;
  }

   /**
   * Unique id for each VA 
   * @return orderId
  **/
  @Schema(description = "Unique id for each VA ")
  public BigDecimal getOrderId() {
    return orderId;
  }

  public void setOrderId(BigDecimal orderId) {
    this.orderId = orderId;
  }

  public Body signature(String signature) {
    this.signature = signature;
    return this;
  }

   /**
   * BAOKIM will sign the data on the following structure sha1withRSA: RequestId|RequestTime|PartnerCode| AccNo|ClientIdNo|TransId|TransAmount| TransTime|BefTransDebt|AffTransDebt| AccountType|OrderId Then will use base64 encoding
   * @return signature
  **/
  @Schema(example = "WzAqTtY4tK0PD3SRBHTvb4X6wCu+PcEEWe0t5KvPh+AwCobb9ATUt2HNWoWe5Jo8HJJVr9rqnXWQtxH7H68fqGRkms5M6oJhKyJ+aXguawbKz6kAn604Y0WhttNoEesGgdhtLkxcZ0/LO8t7CO/d1k6QrixSuRX3vOnQlQqQLcg=", description = "BAOKIM will sign the data on the following structure sha1withRSA: RequestId|RequestTime|PartnerCode| AccNo|ClientIdNo|TransId|TransAmount| TransTime|BefTransDebt|AffTransDebt| AccountType|OrderId Then will use base64 encoding")
  public String getSignature() {
    return signature;
  }

  public void setSignature(String signature) {
    this.signature = signature;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Body body = (Body) o;
    return Objects.equals(this.requestId, body.requestId) &&
        Objects.equals(this.requestTime, body.requestTime) &&
        Objects.equals(this.partnerCode, body.partnerCode) &&
        Objects.equals(this.accNo, body.accNo) &&
        Objects.equals(this.clientIdNo, body.clientIdNo) &&
        Objects.equals(this.transId, body.transId) &&
        Objects.equals(this.transAmount, body.transAmount) &&
        Objects.equals(this.transTime, body.transTime) &&
        Objects.equals(this.befTransDebt, body.befTransDebt) &&
        Objects.equals(this.affTransDebt, body.affTransDebt) &&
        Objects.equals(this.accountType, body.accountType) &&
        Objects.equals(this.orderId, body.orderId) &&
        Objects.equals(this.signature, body.signature);
  }

  @Override
  public int hashCode() {
    return Objects.hash(requestId, requestTime, partnerCode, accNo, clientIdNo, transId, transAmount, transTime, befTransDebt, affTransDebt, accountType, orderId, signature);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Body {\n");
    
    sb.append("    requestId: ").append(toIndentedString(requestId)).append("\n");
    sb.append("    requestTime: ").append(toIndentedString(requestTime)).append("\n");
    sb.append("    partnerCode: ").append(toIndentedString(partnerCode)).append("\n");
    sb.append("    accNo: ").append(toIndentedString(accNo)).append("\n");
    sb.append("    clientIdNo: ").append(toIndentedString(clientIdNo)).append("\n");
    sb.append("    transId: ").append(toIndentedString(transId)).append("\n");
    sb.append("    transAmount: ").append(toIndentedString(transAmount)).append("\n");
    sb.append("    transTime: ").append(toIndentedString(transTime)).append("\n");
    sb.append("    befTransDebt: ").append(toIndentedString(befTransDebt)).append("\n");
    sb.append("    affTransDebt: ").append(toIndentedString(affTransDebt)).append("\n");
    sb.append("    accountType: ").append(toIndentedString(accountType)).append("\n");
    sb.append("    orderId: ").append(toIndentedString(orderId)).append("\n");
    sb.append("    signature: ").append(toIndentedString(signature)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
