/*
 * Collection payments
 * <img src=\"https://devtest.baokim.vn/collection/core_ctt/image/Picture1.png\" class=\"image-collection-payment\" /> <p><strong>Note:</strong></p> <p>+ In case PARTNER want to use collect via Virtual Account, PARTNER will need to buid:</p> <p style=\"padding-left: 50px;\">     - <a href=\"#operations-Virtual_Account_4\\.0-8442c69ffbaf4b3677a52fa3ebcef6d4\">Register virtual account</a> <br>     - <a href=\"#operations-Virtual_Account_4\\.0-1796c61005edee3976097a607fe9dbaa\">Update virtual account informations</a> <br>     - <a href=\"#operations-tag-Notice_of_collection_transaction\">Notice of collection transaction</a> <br> </p>
 *
 * OpenAPI spec version: 2.3 and 4.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
/**
 * SandboxCollectionBody
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-06-30T01:31:18.186Z[Etc/UTC]")
public class SandboxCollectionBody {
  @SerializedName("RequestId")
  private String requestId = null;

  @SerializedName("RequestTime")
  private String requestTime = null;

  @SerializedName("PartnerCode")
  private String partnerCode = null;

  @SerializedName("Operation")
  private BigDecimal operation = null;

  @SerializedName("AccNo")
  private String accNo = null;

  @SerializedName("AccName")
  private String accName = null;

  @SerializedName("CollectAmount")
  private BigDecimal collectAmount = null;

  @SerializedName("OrderId")
  private String orderId = null;

  @SerializedName("ExpireDate")
  private String expireDate = null;

  @SerializedName("CollectionType")
  private String collectionType = null;

  @SerializedName("Bank")
  private String bank = null;

  public SandboxCollectionBody requestId(String requestId) {
    this.requestId = requestId;
    return this;
  }

   /**
   * Unique code 
   * @return requestId
  **/
  @Schema(example = "BK16321291688141", description = "Unique code ")
  public String getRequestId() {
    return requestId;
  }

  public void setRequestId(String requestId) {
    this.requestId = requestId;
  }

  public SandboxCollectionBody requestTime(String requestTime) {
    this.requestTime = requestTime;
    return this;
  }

   /**
   * Time send the request from PARTNER , format: YYYY-MM-DD HH:MM:SS.
   * @return requestTime
  **/
  @Schema(example = "2022-01-24 10:59:46", description = "Time send the request from PARTNER , format: YYYY-MM-DD HH:MM:SS.")
  public String getRequestTime() {
    return requestTime;
  }

  public void setRequestTime(String requestTime) {
    this.requestTime = requestTime;
  }

  public SandboxCollectionBody partnerCode(String partnerCode) {
    this.partnerCode = partnerCode;
    return this;
  }

   /**
   * Unique code BAOKIM provide
   * @return partnerCode
  **/
  @Schema(example = "CHIHOBAOKIM", description = "Unique code BAOKIM provide")
  public String getPartnerCode() {
    return partnerCode;
  }

  public void setPartnerCode(String partnerCode) {
    this.partnerCode = partnerCode;
  }

  public SandboxCollectionBody operation(BigDecimal operation) {
    this.operation = operation;
    return this;
  }

   /**
   * 9001: create va - 9002: update va
   * @return operation
  **/
  @Schema(example = "9001", description = "9001: create va - 9002: update va")
  public BigDecimal getOperation() {
    return operation;
  }

  public void setOperation(BigDecimal operation) {
    this.operation = operation;
  }

  public SandboxCollectionBody accNo(String accNo) {
    this.accNo = accNo;
    return this;
  }

   /**
   * Required when update:VA number need to update information
   * @return accNo
  **/
  @Schema(example = "903002414742", description = "Required when update:VA number need to update information")
  public String getAccNo() {
    return accNo;
  }

  public void setAccNo(String accNo) {
    this.accNo = accNo;
  }

  public SandboxCollectionBody accName(String accName) {
    this.accName = accName;
    return this;
  }

   /**
   * The name of Account holder (name of USER)
   * @return accName
  **/
  @Schema(example = "NHU ANH", description = "The name of Account holder (name of USER)")
  public String getAccName() {
    return accName;
  }

  public void setAccName(String accName) {
    this.accName = accName;
  }

  public SandboxCollectionBody collectAmount(BigDecimal collectAmount) {
    this.collectAmount = collectAmount;
    return this;
  }

   /**
   * collect amount 
   * @return collectAmount
  **/
  @Schema(example = "50000", description = "collect amount ")
  public BigDecimal getCollectAmount() {
    return collectAmount;
  }

  public void setCollectAmount(BigDecimal collectAmount) {
    this.collectAmount = collectAmount;
  }

  public SandboxCollectionBody orderId(String orderId) {
    this.orderId = orderId;
    return this;
  }

   /**
   * Unique id for each VA
   * @return orderId
  **/
  @Schema(example = "BK1632129167822619", description = "Unique id for each VA")
  public String getOrderId() {
    return orderId;
  }

  public void setOrderId(String orderId) {
    this.orderId = orderId;
  }

  public SandboxCollectionBody expireDate(String expireDate) {
    this.expireDate = expireDate;
    return this;
  }

   /**
   * Expire date. Format: YYYYMM-DD HH:II:SS
   * @return expireDate
  **/
  @Schema(example = "2023-09-20 16:12:46", description = "Expire date. Format: YYYYMM-DD HH:II:SS")
  public String getExpireDate() {
    return expireDate;
  }

  public void setExpireDate(String expireDate) {
    this.expireDate = expireDate;
  }

  public SandboxCollectionBody collectionType(String collectionType) {
    this.collectionType = collectionType;
    return this;
  }

   /**
   * Collection type(MORE,CORRECT,LESS,INFINITE)
   * @return collectionType
  **/
  @Schema(example = "CORRECT", description = "Collection type(MORE,CORRECT,LESS,INFINITE)")
  public String getCollectionType() {
    return collectionType;
  }

  public void setCollectionType(String collectionType) {
    this.collectionType = collectionType;
  }

  public SandboxCollectionBody bank(String bank) {
    this.bank = bank;
    return this;
  }

   /**
   * Bank
   * @return bank
  **/
  @Schema(example = "WOORIBANK", description = "Bank")
  public String getBank() {
    return bank;
  }

  public void setBank(String bank) {
    this.bank = bank;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SandboxCollectionBody sandboxCollectionBody = (SandboxCollectionBody) o;
    return Objects.equals(this.requestId, sandboxCollectionBody.requestId) &&
        Objects.equals(this.requestTime, sandboxCollectionBody.requestTime) &&
        Objects.equals(this.partnerCode, sandboxCollectionBody.partnerCode) &&
        Objects.equals(this.operation, sandboxCollectionBody.operation) &&
        Objects.equals(this.accNo, sandboxCollectionBody.accNo) &&
        Objects.equals(this.accName, sandboxCollectionBody.accName) &&
        Objects.equals(this.collectAmount, sandboxCollectionBody.collectAmount) &&
        Objects.equals(this.orderId, sandboxCollectionBody.orderId) &&
        Objects.equals(this.expireDate, sandboxCollectionBody.expireDate) &&
        Objects.equals(this.collectionType, sandboxCollectionBody.collectionType) &&
        Objects.equals(this.bank, sandboxCollectionBody.bank);
  }

  @Override
  public int hashCode() {
    return Objects.hash(requestId, requestTime, partnerCode, operation, accNo, accName, collectAmount, orderId, expireDate, collectionType, bank);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SandboxCollectionBody {\n");
    
    sb.append("    requestId: ").append(toIndentedString(requestId)).append("\n");
    sb.append("    requestTime: ").append(toIndentedString(requestTime)).append("\n");
    sb.append("    partnerCode: ").append(toIndentedString(partnerCode)).append("\n");
    sb.append("    operation: ").append(toIndentedString(operation)).append("\n");
    sb.append("    accNo: ").append(toIndentedString(accNo)).append("\n");
    sb.append("    accName: ").append(toIndentedString(accName)).append("\n");
    sb.append("    collectAmount: ").append(toIndentedString(collectAmount)).append("\n");
    sb.append("    orderId: ").append(toIndentedString(orderId)).append("\n");
    sb.append("    expireDate: ").append(toIndentedString(expireDate)).append("\n");
    sb.append("    collectionType: ").append(toIndentedString(collectionType)).append("\n");
    sb.append("    bank: ").append(toIndentedString(bank)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
