/*
 * Collection payments
 * <img src=\"https://devtest.baokim.vn/collection/core_ctt/image/Picture1.png\" class=\"image-collection-payment\" /> <p><strong>Note:</strong></p> <p>+ In case PARTNER want to use collect via Virtual Account, PARTNER will need to buid:</p> <p style=\"padding-left: 50px;\">     - <a href=\"#operations-Virtual_Account_4\\.0-8442c69ffbaf4b3677a52fa3ebcef6d4\">Register virtual account</a> <br>     - <a href=\"#operations-Virtual_Account_4\\.0-1796c61005edee3976097a607fe9dbaa\">Update virtual account informations</a> <br>     - <a href=\"#operations-tag-Notice_of_collection_transaction\">Notice of collection transaction</a> <br> </p>
 *
 * OpenAPI spec version: 2.3 and 4.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
/**
 * InlineResponse200
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-06-30T01:31:18.186Z[Etc/UTC]")
public class InlineResponse200 {
  @SerializedName("ResponseCode")
  private BigDecimal responseCode = null;

  @SerializedName("ResponseMessage")
  private String responseMessage = null;

  @SerializedName("PartnerCode")
  private String partnerCode = null;

  @SerializedName("OrderId")
  private String orderId = null;

  @SerializedName("CollectAmountMin")
  private BigDecimal collectAmountMin = null;

  @SerializedName("CollectAmountMax")
  private BigDecimal collectAmountMax = null;

  @SerializedName("ExpireDate")
  private String expireDate = null;

  @SerializedName("AccountInfo")
  private List<Object> accountInfo = null;

  public InlineResponse200 responseCode(BigDecimal responseCode) {
    this.responseCode = responseCode;
    return this;
  }

   /**
   * Response code
   * @return responseCode
  **/
  @Schema(example = "200", description = "Response code")
  public BigDecimal getResponseCode() {
    return responseCode;
  }

  public void setResponseCode(BigDecimal responseCode) {
    this.responseCode = responseCode;
  }

  public InlineResponse200 responseMessage(String responseMessage) {
    this.responseMessage = responseMessage;
    return this;
  }

   /**
   * Response message
   * @return responseMessage
  **/
  @Schema(example = "Thành công", description = "Response message")
  public String getResponseMessage() {
    return responseMessage;
  }

  public void setResponseMessage(String responseMessage) {
    this.responseMessage = responseMessage;
  }

  public InlineResponse200 partnerCode(String partnerCode) {
    this.partnerCode = partnerCode;
    return this;
  }

   /**
   * BAOKIM
   * @return partnerCode
  **/
  @Schema(example = "BAOKIM", description = "BAOKIM")
  public String getPartnerCode() {
    return partnerCode;
  }

  public void setPartnerCode(String partnerCode) {
    this.partnerCode = partnerCode;
  }

  public InlineResponse200 orderId(String orderId) {
    this.orderId = orderId;
    return this;
  }

   /**
   * Unique id for each VA
   * @return orderId
  **/
  @Schema(example = "BK1632129167822619", description = "Unique id for each VA")
  public String getOrderId() {
    return orderId;
  }

  public void setOrderId(String orderId) {
    this.orderId = orderId;
  }

  public InlineResponse200 collectAmountMin(BigDecimal collectAmountMin) {
    this.collectAmountMin = collectAmountMin;
    return this;
  }

   /**
   * Min collect amount (Min 50.000 vnd)
   * @return collectAmountMin
  **/
  @Schema(example = "50000", description = "Min collect amount (Min 50.000 vnd)")
  public BigDecimal getCollectAmountMin() {
    return collectAmountMin;
  }

  public void setCollectAmountMin(BigDecimal collectAmountMin) {
    this.collectAmountMin = collectAmountMin;
  }

  public InlineResponse200 collectAmountMax(BigDecimal collectAmountMax) {
    this.collectAmountMax = collectAmountMax;
    return this;
  }

   /**
   * Max collect amount (Max 50.000.000vnd)
   * @return collectAmountMax
  **/
  @Schema(example = "50000", description = "Max collect amount (Max 50.000.000vnd)")
  public BigDecimal getCollectAmountMax() {
    return collectAmountMax;
  }

  public void setCollectAmountMax(BigDecimal collectAmountMax) {
    this.collectAmountMax = collectAmountMax;
  }

  public InlineResponse200 expireDate(String expireDate) {
    this.expireDate = expireDate;
    return this;
  }

   /**
   * Expire date. Format: YYYYMM-DD HH:II:SS
   * @return expireDate
  **/
  @Schema(example = "2023-09-20 16:12:46", description = "Expire date. Format: YYYYMM-DD HH:II:SS")
  public String getExpireDate() {
    return expireDate;
  }

  public void setExpireDate(String expireDate) {
    this.expireDate = expireDate;
  }

  public InlineResponse200 accountInfo(List<Object> accountInfo) {
    this.accountInfo = accountInfo;
    return this;
  }

  public InlineResponse200 addAccountInfoItem(Object accountInfoItem) {
    if (this.accountInfo == null) {
      this.accountInfo = new ArrayList<Object>();
    }
    this.accountInfo.add(accountInfoItem);
    return this;
  }

   /**
   * Get accountInfo
   * @return accountInfo
  **/
  @Schema(description = "")
  public List<Object> getAccountInfo() {
    return accountInfo;
  }

  public void setAccountInfo(List<Object> accountInfo) {
    this.accountInfo = accountInfo;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse200 inlineResponse200 = (InlineResponse200) o;
    return Objects.equals(this.responseCode, inlineResponse200.responseCode) &&
        Objects.equals(this.responseMessage, inlineResponse200.responseMessage) &&
        Objects.equals(this.partnerCode, inlineResponse200.partnerCode) &&
        Objects.equals(this.orderId, inlineResponse200.orderId) &&
        Objects.equals(this.collectAmountMin, inlineResponse200.collectAmountMin) &&
        Objects.equals(this.collectAmountMax, inlineResponse200.collectAmountMax) &&
        Objects.equals(this.expireDate, inlineResponse200.expireDate) &&
        Objects.equals(this.accountInfo, inlineResponse200.accountInfo);
  }

  @Override
  public int hashCode() {
    return Objects.hash(responseCode, responseMessage, partnerCode, orderId, collectAmountMin, collectAmountMax, expireDate, accountInfo);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse200 {\n");
    
    sb.append("    responseCode: ").append(toIndentedString(responseCode)).append("\n");
    sb.append("    responseMessage: ").append(toIndentedString(responseMessage)).append("\n");
    sb.append("    partnerCode: ").append(toIndentedString(partnerCode)).append("\n");
    sb.append("    orderId: ").append(toIndentedString(orderId)).append("\n");
    sb.append("    collectAmountMin: ").append(toIndentedString(collectAmountMin)).append("\n");
    sb.append("    collectAmountMax: ").append(toIndentedString(collectAmountMax)).append("\n");
    sb.append("    expireDate: ").append(toIndentedString(expireDate)).append("\n");
    sb.append("    accountInfo: ").append(toIndentedString(accountInfo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
