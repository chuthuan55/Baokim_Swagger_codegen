/*
 *  Installment docs API
 * <a href='/baokim-firm-open-api-9050'>1: Function Check Installment Support </a>  <a href='/baokim-firm-open-api-9051'>2: Function Get Bank Loan Package </a>  <a href='/baokim-firm-open-api-9052'>3: Function Create Transaction </a>  <a href='/baokim-firm-open-api-9062'>4: Function Cancel order</a>  Private key and public key Baokim is currently using digital signature by RSA-SHA1  There are several ways to generate RSA key pairs.  Way 1:  Generate your RSA key pairs online: <a href=\"http://travistidwell.com/blog/2013/09/06/an-online-rsa-public-and-private-key-generator/\" target=\"_blank\">Generate now</a>  Way 2:  Using OpenSSL software for Windows:  Step 1: Download the software at:  http://slproweb.com/products/Win32OpenSSL.html. Partner should download the installer \"OpenSSL_Light-1_0_2k\". Then install in any directory, for example \"C:\\OpenSSLWin64\"  Step 2: Access \"C:\\OpenSSLWin64\\bin\" then open the command prompt. Type the command to declare the environment config.  set OPENSSL_CONF=C:\\OpenSSL-Win64\\bin\\openssl.cfg  Step 3: Generate private key and public key  openssl genrsa -aes256 -out c:\\opensslkeys\\partner\\partner_privatekey.pem 2048  openssl rsa –in c:\\opensslkeys\\partner\\partner_privatekey.pem -pubout >c:\\opensslkeys\\partner\\partner_publickey.pem  After successful pairing, Partner will send back to Baokim the public key to authenticate the signature that the Partner sends via the API
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.InlineResponse2001DataLoanPackages;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * InlineResponse2001DataBankList
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-06-30T01:29:43.937Z[Etc/UTC]")
public class InlineResponse2001DataBankList {
  @SerializedName("NameVi")
  private String nameVi = null;

  @SerializedName("BankShortName")
  private String bankShortName = null;

  @SerializedName("BankCode")
  private String bankCode = null;

  @SerializedName("CardFee")
  private String cardFee = null;

  @SerializedName("HeadNoAccept")
  private List<String> headNoAccept = null;

  @SerializedName("MinimumRequire")
  private String minimumRequire = null;

  @SerializedName("LoanPackages")
  private List<InlineResponse2001DataLoanPackages> loanPackages = null;

  public InlineResponse2001DataBankList nameVi(String nameVi) {
    this.nameVi = nameVi;
    return this;
  }

   /**
   * Get nameVi
   * @return nameVi
  **/
  @Schema(example = "Ngân hàng TMCP Việt Nam Thịnh Vương", description = "")
  public String getNameVi() {
    return nameVi;
  }

  public void setNameVi(String nameVi) {
    this.nameVi = nameVi;
  }

  public InlineResponse2001DataBankList bankShortName(String bankShortName) {
    this.bankShortName = bankShortName;
    return this;
  }

   /**
   * Get bankShortName
   * @return bankShortName
  **/
  @Schema(example = "VPBANK", description = "")
  public String getBankShortName() {
    return bankShortName;
  }

  public void setBankShortName(String bankShortName) {
    this.bankShortName = bankShortName;
  }

  public InlineResponse2001DataBankList bankCode(String bankCode) {
    this.bankCode = bankCode;
    return this;
  }

   /**
   * Get bankCode
   * @return bankCode
  **/
  @Schema(example = "VPBANK", description = "")
  public String getBankCode() {
    return bankCode;
  }

  public void setBankCode(String bankCode) {
    this.bankCode = bankCode;
  }

  public InlineResponse2001DataBankList cardFee(String cardFee) {
    this.cardFee = cardFee;
    return this;
  }

   /**
   * Get cardFee
   * @return cardFee
  **/
  @Schema(example = "1", description = "")
  public String getCardFee() {
    return cardFee;
  }

  public void setCardFee(String cardFee) {
    this.cardFee = cardFee;
  }

  public InlineResponse2001DataBankList headNoAccept(List<String> headNoAccept) {
    this.headNoAccept = headNoAccept;
    return this;
  }

  public InlineResponse2001DataBankList addHeadNoAcceptItem(String headNoAcceptItem) {
    if (this.headNoAccept == null) {
      this.headNoAccept = new ArrayList<String>();
    }
    this.headNoAccept.add(headNoAcceptItem);
    return this;
  }

   /**
   * Get headNoAccept
   * @return headNoAccept
  **/
  @Schema(description = "")
  public List<String> getHeadNoAccept() {
    return headNoAccept;
  }

  public void setHeadNoAccept(List<String> headNoAccept) {
    this.headNoAccept = headNoAccept;
  }

  public InlineResponse2001DataBankList minimumRequire(String minimumRequire) {
    this.minimumRequire = minimumRequire;
    return this;
  }

   /**
   * Get minimumRequire
   * @return minimumRequire
  **/
  @Schema(example = "3000000", description = "")
  public String getMinimumRequire() {
    return minimumRequire;
  }

  public void setMinimumRequire(String minimumRequire) {
    this.minimumRequire = minimumRequire;
  }

  public InlineResponse2001DataBankList loanPackages(List<InlineResponse2001DataLoanPackages> loanPackages) {
    this.loanPackages = loanPackages;
    return this;
  }

  public InlineResponse2001DataBankList addLoanPackagesItem(InlineResponse2001DataLoanPackages loanPackagesItem) {
    if (this.loanPackages == null) {
      this.loanPackages = new ArrayList<InlineResponse2001DataLoanPackages>();
    }
    this.loanPackages.add(loanPackagesItem);
    return this;
  }

   /**
   * Get loanPackages
   * @return loanPackages
  **/
  @Schema(description = "")
  public List<InlineResponse2001DataLoanPackages> getLoanPackages() {
    return loanPackages;
  }

  public void setLoanPackages(List<InlineResponse2001DataLoanPackages> loanPackages) {
    this.loanPackages = loanPackages;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse2001DataBankList inlineResponse2001DataBankList = (InlineResponse2001DataBankList) o;
    return Objects.equals(this.nameVi, inlineResponse2001DataBankList.nameVi) &&
        Objects.equals(this.bankShortName, inlineResponse2001DataBankList.bankShortName) &&
        Objects.equals(this.bankCode, inlineResponse2001DataBankList.bankCode) &&
        Objects.equals(this.cardFee, inlineResponse2001DataBankList.cardFee) &&
        Objects.equals(this.headNoAccept, inlineResponse2001DataBankList.headNoAccept) &&
        Objects.equals(this.minimumRequire, inlineResponse2001DataBankList.minimumRequire) &&
        Objects.equals(this.loanPackages, inlineResponse2001DataBankList.loanPackages);
  }

  @Override
  public int hashCode() {
    return Objects.hash(nameVi, bankShortName, bankCode, cardFee, headNoAccept, minimumRequire, loanPackages);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse2001DataBankList {\n");
    
    sb.append("    nameVi: ").append(toIndentedString(nameVi)).append("\n");
    sb.append("    bankShortName: ").append(toIndentedString(bankShortName)).append("\n");
    sb.append("    bankCode: ").append(toIndentedString(bankCode)).append("\n");
    sb.append("    cardFee: ").append(toIndentedString(cardFee)).append("\n");
    sb.append("    headNoAccept: ").append(toIndentedString(headNoAccept)).append("\n");
    sb.append("    minimumRequire: ").append(toIndentedString(minimumRequire)).append("\n");
    sb.append("    loanPackages: ").append(toIndentedString(loanPackages)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
