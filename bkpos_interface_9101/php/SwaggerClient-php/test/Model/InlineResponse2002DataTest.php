<?php
/**
 * InlineResponse2002DataTest
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Installment docs API
 *
 * <a href='/baokim-firm-open-api-9050'>1: Function Check Installment Support </a>  <a href='/baokim-firm-open-api-9051'>2: Function Get Bank Loan Package </a>  <a href='/baokim-firm-open-api-9052'>3: Function Create Transaction </a>  <a href='/baokim-firm-open-api-9062'>4: Function Cancel order</a>  Private key and public key Baokim is currently using digital signature by RSA-SHA1  There are several ways to generate RSA key pairs.  Way 1:  Generate your RSA key pairs online: <a href=\"http://travistidwell.com/blog/2013/09/06/an-online-rsa-public-and-private-key-generator/\" target=\"_blank\">Generate now</a>  Way 2:  Using OpenSSL software for Windows:  Step 1: Download the software at:  http://slproweb.com/products/Win32OpenSSL.html. Partner should download the installer \"OpenSSL_Light-1_0_2k\". Then install in any directory, for example \"C:\\OpenSSLWin64\"  Step 2: Access \"C:\\OpenSSLWin64\\bin\" then open the command prompt. Type the command to declare the environment config.  set OPENSSL_CONF=C:\\OpenSSL-Win64\\bin\\openssl.cfg  Step 3: Generate private key and public key  openssl genrsa -aes256 -out c:\\opensslkeys\\partner\\partner_privatekey.pem 2048  openssl rsa â€“in c:\\opensslkeys\\partner\\partner_privatekey.pem -pubout >c:\\opensslkeys\\partner\\partner_publickey.pem  After successful pairing, Partner will send back to Baokim the public key to authenticate the signature that the Partner sends via the API
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.35-SNAPSHOT
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the model.
 */

namespace Swagger\Client;

/**
 * InlineResponse2002DataTest Class Doc Comment
 *
 * @category    Class
 * @description InlineResponse2002Data
 * @package     Swagger\Client
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class InlineResponse2002DataTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test "InlineResponse2002Data"
     */
    public function testInlineResponse2002Data()
    {
    }

    /**
     * Test attribute "request_id"
     */
    public function testPropertyRequestId()
    {
    }

    /**
     * Test attribute "request_time"
     */
    public function testPropertyRequestTime()
    {
    }

    /**
     * Test attribute "card_no"
     */
    public function testPropertyCardNo()
    {
    }

    /**
     * Test attribute "bank_code"
     */
    public function testPropertyBankCode()
    {
    }

    /**
     * Test attribute "operation"
     */
    public function testPropertyOperation()
    {
    }

    /**
     * Test attribute "partner_code"
     */
    public function testPropertyPartnerCode()
    {
    }

    /**
     * Test attribute "customer_name"
     */
    public function testPropertyCustomerName()
    {
    }

    /**
     * Test attribute "customer_phone"
     */
    public function testPropertyCustomerPhone()
    {
    }

    /**
     * Test attribute "customer_email"
     */
    public function testPropertyCustomerEmail()
    {
    }

    /**
     * Test attribute "product_name"
     */
    public function testPropertyProductName()
    {
    }

    /**
     * Test attribute "client_id_no"
     */
    public function testPropertyClientIdNo()
    {
    }

    /**
     * Test attribute "auth_code"
     */
    public function testPropertyAuthCode()
    {
    }

    /**
     * Test attribute "down_payment"
     */
    public function testPropertyDownPayment()
    {
    }

    /**
     * Test attribute "original_price"
     */
    public function testPropertyOriginalPrice()
    {
    }

    /**
     * Test attribute "conversion_money"
     */
    public function testPropertyConversionMoney()
    {
    }

    /**
     * Test attribute "pay_per_month"
     */
    public function testPropertyPayPerMonth()
    {
    }

    /**
     * Test attribute "installment_amount"
     */
    public function testPropertyInstallmentAmount()
    {
    }

    /**
     * Test attribute "total_payment_amount"
     */
    public function testPropertyTotalPaymentAmount()
    {
    }

    /**
     * Test attribute "reference_id"
     */
    public function testPropertyReferenceId()
    {
    }

    /**
     * Test attribute "bk_trans_id"
     */
    public function testPropertyBkTransId()
    {
    }
}
